USE GD2C2023
GO

IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'SQLSQUAD')
BEGIN 
	EXEC ('CREATE SCHEMA SQLSQUAD')
END
GO

/* 
 * TABLE: SQLSQUAD.BI_Alquiler 
 */

CREATE TABLE SQLSQUAD.BI_Alquiler(
    BI_ALQUILER_TIEMPO_ID              numeric(18, 0)    NOT NULL,
    BI_ALQUILER_UBICACION_ID           numeric(18, 0)    NOT NULL,
    BI_ALQUILER_TIPO_INMUEBLE_ID       numeric(18, 0)    NOT NULL,
    BI_ALQUILER_TIPO_OPERACION_ID      numeric(18, 0)    NOT NULL,
    BI_ALQUILER_RANGO_ETARIO_ID        numeric(18, 0)    NOT NULL,
    BI_ALQUILER_SUCURSAL_CODIGO        numeric(18, 0)    NOT NULL,
    BI_ALQUILER_ESTADO_ALQUILER_ID     numeric(18, 0)    NOT NULL,
    BI_ALQUILER_COMISION_PROMEDIO      numeric(18, 2)    NULL,
    BI_ALQUILER_CANTIDAD_ALQUILERES    numeric(18, 0)    NULL,
    CONSTRAINT PK_8 PRIMARY KEY NONCLUSTERED (BI_ALQUILER_TIEMPO_ID, BI_ALQUILER_UBICACION_ID, BI_ALQUILER_TIPO_INMUEBLE_ID, BI_ALQUILER_TIPO_OPERACION_ID, BI_ALQUILER_RANGO_ETARIO_ID, BI_ALQUILER_SUCURSAL_CODIGO, BI_ALQUILER_ESTADO_ALQUILER_ID)
)
GO



IF OBJECT_ID('SQLSQUAD.BI_Alquiler') IS NOT NULL
    PRINT '<<< CREATED TABLE SQLSQUAD.BI_Alquiler >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE SQLSQUAD.BI_Alquiler >>>'
GO

/* 
 * TABLE: SQLSQUAD.BI_Ambientes 
 */

CREATE TABLE SQLSQUAD.BI_Ambientes(
    BI_AMBIENTES_ID        numeric(18, 0)    NOT NULL,
    BI_AMBIENTES_NOMBRE    nvarchar(100)     NULL,
    CONSTRAINT PK_11 PRIMARY KEY NONCLUSTERED (BI_AMBIENTES_ID)
)
GO



IF OBJECT_ID('SQLSQUAD.BI_Ambientes') IS NOT NULL
    PRINT '<<< CREATED TABLE SQLSQUAD.BI_Ambientes >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE SQLSQUAD.BI_Ambientes >>>'
GO

/* 
 * TABLE: SQLSQUAD.BI_Anuncio 
 */

CREATE TABLE SQLSQUAD.BI_Anuncio(
    BI_ANUNCIO_TIEMPO_ID                             numeric(18, 0)    NOT NULL,
    BI_ANUNCIO_AMBIENTES_ID                          numeric(18, 0)    NOT NULL,
    BI_ANUNCIO_UBICACION_ID                          numeric(18, 0)    NOT NULL,
    BI_ANUNCIO_TIPO_OPERACION_ID                     numeric(18, 0)    NOT NULL,
    BI_ANUNCIO_SUCURSAL_CODIGO                       numeric(18, 0)    NOT NULL,
    BI_ANUNCIO_TIPO_MONEDA_ID                        numeric(18, 0)    NOT NULL,
    BI_ANUNCIO_RANGO_M2_ID                           numeric(18, 0)    NOT NULL,
    BI_ANUNCIO_TIPO_INMUEBLE_ID                      numeric(18, 0)    NOT NULL,
    BI_ANUNCIO_RANGO_ETARIO_ID                       numeric(18, 0)    NOT NULL,
    BI_ANUNCIO_ESTADO_ANUNCIO_ID                     numeric(18, 0)    NOT NULL,
    BI_ANUNCIO_DURACION_PROMEDIO                     numeric(18, 0)    NULL,
    BI_ANUNCIO_PRECIO_PROMEDIO                       numeric(18, 2)    NULL,
    BI_ANUNCIO_PORCENTAJE_OPERACIONES_CONCRETADAS    numeric(18, 2)    NULL,
    CONSTRAINT PK_1 PRIMARY KEY NONCLUSTERED (BI_ANUNCIO_TIEMPO_ID, BI_ANUNCIO_AMBIENTES_ID, BI_ANUNCIO_UBICACION_ID, BI_ANUNCIO_TIPO_OPERACION_ID, BI_ANUNCIO_SUCURSAL_CODIGO, BI_ANUNCIO_TIPO_MONEDA_ID, BI_ANUNCIO_RANGO_M2_ID, BI_ANUNCIO_TIPO_INMUEBLE_ID, BI_ANUNCIO_RANGO_ETARIO_ID, BI_ANUNCIO_ESTADO_ANUNCIO_ID)
)
GO



IF OBJECT_ID('SQLSQUAD.BI_Anuncio') IS NOT NULL
    PRINT '<<< CREATED TABLE SQLSQUAD.BI_Anuncio >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE SQLSQUAD.BI_Anuncio >>>'
GO

/* 
 * TABLE: SQLSQUAD.BI_Estado_alquiler 
 */

CREATE TABLE SQLSQUAD.BI_Estado_alquiler(
    BI_ESTADO_ALQUILER_ID        numeric(18, 0)    NOT NULL,
    BI_ESTADO_ALQUILER_NOMBRE    nvarchar(100)     NULL,
    CONSTRAINT PK_20 PRIMARY KEY CLUSTERED (BI_ESTADO_ALQUILER_ID)
)
GO



IF OBJECT_ID('SQLSQUAD.BI_Estado_alquiler') IS NOT NULL
    PRINT '<<< CREATED TABLE SQLSQUAD.BI_Estado_alquiler >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE SQLSQUAD.BI_Estado_alquiler >>>'
GO

/* 
 * TABLE: SQLSQUAD.BI_Estado_anuncio 
 */

CREATE TABLE SQLSQUAD.BI_Estado_anuncio(
    BI_ESTADO_ANUNCIO_ID        numeric(18, 0)    NOT NULL,
    BI_ESTADO_ANUNCIO_NOMBRE    nvarchar(100)     NULL,
    CONSTRAINT PK_21 PRIMARY KEY CLUSTERED (BI_ESTADO_ANUNCIO_ID)
)
GO



IF OBJECT_ID('SQLSQUAD.BI_Estado_anuncio') IS NOT NULL
    PRINT '<<< CREATED TABLE SQLSQUAD.BI_Estado_anuncio >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE SQLSQUAD.BI_Estado_anuncio >>>'
GO

/* 
 * TABLE: SQLSQUAD.BI_Fecha_Pago 
 */

CREATE TABLE SQLSQUAD.BI_Fecha_Pago(
    BI_FECHA_PAGO_ID                   numeric(18, 0)    IDENTITY(1,1),
    BI_FECHA_PAGO_FECHA_VENCIMIENTO    datetime          NULL,
    BI_FECHA_PAGO_FECHA                datetime          NULL,
    CONSTRAINT PK_23 PRIMARY KEY CLUSTERED (BI_FECHA_PAGO_ID)
)
GO



IF OBJECT_ID('SQLSQUAD.BI_Fecha_Pago') IS NOT NULL
    PRINT '<<< CREATED TABLE SQLSQUAD.BI_Fecha_Pago >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE SQLSQUAD.BI_Fecha_Pago >>>'
GO

/* 
 * TABLE: SQLSQUAD.BI_Pago_alquiler 
 */

CREATE TABLE SQLSQUAD.BI_Pago_alquiler(
    BI_PAGO_ALQUILER_TIEMPO_ID             numeric(18, 0)    NOT NULL,
    BI_PAGO_ALQUILER_ESTADO_ALQUILER_ID    numeric(18, 0)    NOT NULL,
    BI_PAGO_ALQUILER_FECHA_PAGO_ID         numeric(18, 0)    NOT NULL,
    BI_PAGO_ALQUILER_TIPO_MONEDA_ID        numeric(18, 0)    NOT NULL,
    BI_PAGO_ALQUILER_SUCURSAL_CODIGO       numeric(18, 0)    NOT NULL,
    BI_PAGO_ALQUILER_TIPO_OPERACION_ID     numeric(18, 0)    NOT NULL,
    BI_PAGO_ALQUILER_IMPORTE               numeric(18, 2)    NULL,
    CONSTRAINT PK_22 PRIMARY KEY NONCLUSTERED (BI_PAGO_ALQUILER_TIEMPO_ID, BI_PAGO_ALQUILER_ESTADO_ALQUILER_ID, BI_PAGO_ALQUILER_FECHA_PAGO_ID, BI_PAGO_ALQUILER_TIPO_MONEDA_ID, BI_PAGO_ALQUILER_SUCURSAL_CODIGO, BI_PAGO_ALQUILER_TIPO_OPERACION_ID)
)
GO



IF OBJECT_ID('SQLSQUAD.BI_Pago_alquiler') IS NOT NULL
    PRINT '<<< CREATED TABLE SQLSQUAD.BI_Pago_alquiler >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE SQLSQUAD.BI_Pago_alquiler >>>'
GO

/* 
 * TABLE: SQLSQUAD.BI_Rango_Etario 
 */

CREATE TABLE SQLSQUAD.BI_Rango_Etario(
    RANGO_ETARIO_ID    numeric(18, 0)    IDENTITY(1,1),
    MENOR_A_25         bit               NULL,
    MAYOR_A_50         bit               NULL,
    ENTRE_35_Y_50      bit               NULL,
    ENTRE_25_Y_35      bit               NULL,
    CONSTRAINT PK_6 PRIMARY KEY NONCLUSTERED (RANGO_ETARIO_ID)
)
GO



IF OBJECT_ID('SQLSQUAD.BI_Rango_Etario') IS NOT NULL
    PRINT '<<< CREATED TABLE SQLSQUAD.BI_Rango_Etario >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE SQLSQUAD.BI_Rango_Etario >>>'
GO

/* 
 * TABLE: SQLSQUAD.BI_Rango_m2 
 */

CREATE TABLE SQLSQUAD.BI_Rango_m2(
    RANGO_M2_ID       numeric(18, 0)    IDENTITY(1,1),
    MAYOR_A_100       bit               NULL,
    ENTRE_75_Y_100    bit               NULL,
    ENTRE_55_75       bit               NOT NULL,
    ENTRE_35_Y_55     bit               NULL,
    MENOR_A_35        bit               NULL,
    CONSTRAINT PK_13 PRIMARY KEY NONCLUSTERED (RANGO_M2_ID)
)
GO



IF OBJECT_ID('SQLSQUAD.BI_Rango_m2') IS NOT NULL
    PRINT '<<< CREATED TABLE SQLSQUAD.BI_Rango_m2 >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE SQLSQUAD.BI_Rango_m2 >>>'
GO

/* 
 * TABLE: SQLSQUAD.BI_Sucursal 
 */

CREATE TABLE SQLSQUAD.BI_Sucursal(
    BI_SUCURSAL_CODIGO       numeric(18, 0)    NOT NULL,
    BI_SUCURSAL_NOMBRE       nvarchar(100)     NULL,
    BI_SUCURSAL_DIRECCION    nvarchar(100)     NULL,
    BI_SUCURSAL_TELEFONO     nvarchar(100)     NULL,
    CONSTRAINT PK_5 PRIMARY KEY NONCLUSTERED (BI_SUCURSAL_CODIGO)
)
GO



IF OBJECT_ID('SQLSQUAD.BI_Sucursal') IS NOT NULL
    PRINT '<<< CREATED TABLE SQLSQUAD.BI_Sucursal >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE SQLSQUAD.BI_Sucursal >>>'
GO

/* 
 * TABLE: SQLSQUAD.BI_Tiempo 
 */

CREATE TABLE SQLSQUAD.BI_Tiempo(
    BI_TIEMPO_ID              numeric(18, 0)    IDENTITY(1,1),
    BI_TIEMPO_MES             int               NULL,
    BI_TIEMPO_CUATRIMESTRE    int               NULL,
    BI_TIEMPO_AÑO             int               NULL,
    CONSTRAINT PK_3 PRIMARY KEY NONCLUSTERED (BI_TIEMPO_ID)
)
GO



IF OBJECT_ID('SQLSQUAD.BI_Tiempo') IS NOT NULL
    PRINT '<<< CREATED TABLE SQLSQUAD.BI_Tiempo >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE SQLSQUAD.BI_Tiempo >>>'
GO

/* 
 * TABLE: SQLSQUAD.BI_Tipo_inmueble 
 */

CREATE TABLE SQLSQUAD.BI_Tipo_inmueble(
    BI_TIPO_INMUEBLE_ID        numeric(18, 0)    NOT NULL,
    BI_TIPO_INMUEBLE_NOMBRE    nvarchar(100)     NULL,
    CONSTRAINT PK_7 PRIMARY KEY NONCLUSTERED (BI_TIPO_INMUEBLE_ID)
)
GO



IF OBJECT_ID('SQLSQUAD.BI_Tipo_inmueble') IS NOT NULL
    PRINT '<<< CREATED TABLE SQLSQUAD.BI_Tipo_inmueble >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE SQLSQUAD.BI_Tipo_inmueble >>>'
GO

/* 
 * TABLE: SQLSQUAD.BI_Tipo_moneda 
 */

CREATE TABLE SQLSQUAD.BI_Tipo_moneda(
    BI_TIPO_MONEDA_ID        numeric(18, 0)    NOT NULL,
    BI_TIPO_MONEDA_NOMBRE    nvarchar(100)     NULL,
    CONSTRAINT PK_7_1_1 PRIMARY KEY NONCLUSTERED (BI_TIPO_MONEDA_ID)
)
GO



IF OBJECT_ID('SQLSQUAD.BI_Tipo_moneda') IS NOT NULL
    PRINT '<<< CREATED TABLE SQLSQUAD.BI_Tipo_moneda >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE SQLSQUAD.BI_Tipo_moneda >>>'
GO

/* 
 * TABLE: SQLSQUAD.BI_Tipo_operacion 
 */

CREATE TABLE SQLSQUAD.BI_Tipo_operacion(
    BI_TIPO_OPERACION_ID        numeric(18, 0)    NOT NULL,
    BI_TIPO_OPERACION_NOMBRE    nvarchar(100)     NULL,
    CONSTRAINT PK_7_1 PRIMARY KEY NONCLUSTERED (BI_TIPO_OPERACION_ID)
)
GO



IF OBJECT_ID('SQLSQUAD.BI_Tipo_operacion') IS NOT NULL
    PRINT '<<< CREATED TABLE SQLSQUAD.BI_Tipo_operacion >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE SQLSQUAD.BI_Tipo_operacion >>>'
GO

/* 
 * TABLE: SQLSQUAD.BI_Ubicacion 
 */

CREATE TABLE SQLSQUAD.BI_Ubicacion(
    BI_UBICACION_ID           numeric(18, 0)    IDENTITY(1,1),
    BI_UBICACION_BARRIO       nvarchar(100)     NULL,
    BI_UBICACION_LOCALIDAD    nvarchar(100)     NULL,
    BI_UBICACION_PROVINCIA    nvarchar(100)     NULL,
    CONSTRAINT PK_4 PRIMARY KEY NONCLUSTERED (BI_UBICACION_ID)
)
GO



IF OBJECT_ID('SQLSQUAD.BI_Ubicacion') IS NOT NULL
    PRINT '<<< CREATED TABLE SQLSQUAD.BI_Ubicacion >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE SQLSQUAD.BI_Ubicacion >>>'
GO

/* 
 * TABLE: SQLSQUAD.BI_Venta_inmueble 
 */

CREATE TABLE SQLSQUAD.BI_Venta_inmueble(
    BI_VENTA_TIEMPO_ID                 numeric(18, 0)    NOT NULL,
    BI_VENTA_RANGO_M2_ID               numeric(18, 0)    NOT NULL,
    BI_VENTA_TIPO_OPERACION_ID         numeric(18, 0)    NOT NULL,
    BI_VENTA_TIPO_MONEDA_ID            numeric(18, 0)    NOT NULL,
    BI_VENTA_TIPO_INMUEBLE_ID          numeric(18, 0)    NOT NULL,
    BI_VENTA_UBICACION_ID              numeric(18, 0)    NOT NULL,
    BI_VENTA_SUCURSAL_CODIGO           numeric(18, 0)    NOT NULL,
    BI_VENTA_PRECIO                    numeric(18, 2)    NULL,
    BI_VENTA_COMISION_PROMEDIO         numeric(18, 2)    NULL,
    BI_VENTA_PRECIO_PROMEDIO_POR_M2    numeric(18, 2)    NULL,
    CONSTRAINT PK_10 PRIMARY KEY NONCLUSTERED (BI_VENTA_TIEMPO_ID, BI_VENTA_RANGO_M2_ID, BI_VENTA_TIPO_OPERACION_ID, BI_VENTA_TIPO_MONEDA_ID, BI_VENTA_TIPO_INMUEBLE_ID, BI_VENTA_UBICACION_ID, BI_VENTA_SUCURSAL_CODIGO)
)
GO



IF OBJECT_ID('SQLSQUAD.BI_Venta_inmueble') IS NOT NULL
    PRINT '<<< CREATED TABLE SQLSQUAD.BI_Venta_inmueble >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE SQLSQUAD.BI_Venta_inmueble >>>'
GO

/* 
 * TABLE: SQLSQUAD.BI_Alquiler 
 */

ALTER TABLE SQLSQUAD.BI_Alquiler ADD CONSTRAINT RefBI_Tiempo10 
    FOREIGN KEY (BI_ALQUILER_TIEMPO_ID)
    REFERENCES SQLSQUAD.BI_Tiempo(BI_TIEMPO_ID)
GO

ALTER TABLE SQLSQUAD.BI_Alquiler ADD CONSTRAINT RefBI_Ubicacion11 
    FOREIGN KEY (BI_ALQUILER_UBICACION_ID)
    REFERENCES SQLSQUAD.BI_Ubicacion(BI_UBICACION_ID)
GO

ALTER TABLE SQLSQUAD.BI_Alquiler ADD CONSTRAINT RefBI_Tipo_inmueble13 
    FOREIGN KEY (BI_ALQUILER_TIPO_INMUEBLE_ID)
    REFERENCES SQLSQUAD.BI_Tipo_inmueble(BI_TIPO_INMUEBLE_ID)
GO

ALTER TABLE SQLSQUAD.BI_Alquiler ADD CONSTRAINT RefBI_Tipo_operacion14 
    FOREIGN KEY (BI_ALQUILER_TIPO_OPERACION_ID)
    REFERENCES SQLSQUAD.BI_Tipo_operacion(BI_TIPO_OPERACION_ID)
GO

ALTER TABLE SQLSQUAD.BI_Alquiler ADD CONSTRAINT RefBI_Rango_Etario17 
    FOREIGN KEY (BI_ALQUILER_RANGO_ETARIO_ID)
    REFERENCES SQLSQUAD.BI_Rango_Etario(RANGO_ETARIO_ID)
GO

ALTER TABLE SQLSQUAD.BI_Alquiler ADD CONSTRAINT RefBI_Sucursal18 
    FOREIGN KEY (BI_ALQUILER_SUCURSAL_CODIGO)
    REFERENCES SQLSQUAD.BI_Sucursal(BI_SUCURSAL_CODIGO)
GO

ALTER TABLE SQLSQUAD.BI_Alquiler ADD CONSTRAINT RefBI_Estado_alquiler29 
    FOREIGN KEY (BI_ALQUILER_ESTADO_ALQUILER_ID)
    REFERENCES SQLSQUAD.BI_Estado_alquiler(BI_ESTADO_ALQUILER_ID)
GO


/* 
 * TABLE: SQLSQUAD.BI_Anuncio 
 */

ALTER TABLE SQLSQUAD.BI_Anuncio ADD CONSTRAINT RefBI_Ambientes2 
    FOREIGN KEY (BI_ANUNCIO_AMBIENTES_ID)
    REFERENCES SQLSQUAD.BI_Ambientes(BI_AMBIENTES_ID)
GO

ALTER TABLE SQLSQUAD.BI_Anuncio ADD CONSTRAINT RefBI_Ubicacion3 
    FOREIGN KEY (BI_ANUNCIO_UBICACION_ID)
    REFERENCES SQLSQUAD.BI_Ubicacion(BI_UBICACION_ID)
GO

ALTER TABLE SQLSQUAD.BI_Anuncio ADD CONSTRAINT RefBI_Tipo_operacion4 
    FOREIGN KEY (BI_ANUNCIO_TIPO_OPERACION_ID)
    REFERENCES SQLSQUAD.BI_Tipo_operacion(BI_TIPO_OPERACION_ID)
GO

ALTER TABLE SQLSQUAD.BI_Anuncio ADD CONSTRAINT RefBI_Sucursal5 
    FOREIGN KEY (BI_ANUNCIO_SUCURSAL_CODIGO)
    REFERENCES SQLSQUAD.BI_Sucursal(BI_SUCURSAL_CODIGO)
GO

ALTER TABLE SQLSQUAD.BI_Anuncio ADD CONSTRAINT RefBI_Rango_Etario6 
    FOREIGN KEY (BI_ANUNCIO_RANGO_ETARIO_ID)
    REFERENCES SQLSQUAD.BI_Rango_Etario(RANGO_ETARIO_ID)
GO

ALTER TABLE SQLSQUAD.BI_Anuncio ADD CONSTRAINT RefBI_Tipo_moneda7 
    FOREIGN KEY (BI_ANUNCIO_TIPO_MONEDA_ID)
    REFERENCES SQLSQUAD.BI_Tipo_moneda(BI_TIPO_MONEDA_ID)
GO

ALTER TABLE SQLSQUAD.BI_Anuncio ADD CONSTRAINT RefBI_Rango_m28 
    FOREIGN KEY (BI_ANUNCIO_RANGO_M2_ID)
    REFERENCES SQLSQUAD.BI_Rango_m2(RANGO_M2_ID)
GO

ALTER TABLE SQLSQUAD.BI_Anuncio ADD CONSTRAINT RefBI_Tipo_inmueble9 
    FOREIGN KEY (BI_ANUNCIO_TIPO_INMUEBLE_ID)
    REFERENCES SQLSQUAD.BI_Tipo_inmueble(BI_TIPO_INMUEBLE_ID)
GO

ALTER TABLE SQLSQUAD.BI_Anuncio ADD CONSTRAINT RefBI_Estado_anuncio30 
    FOREIGN KEY (BI_ANUNCIO_ESTADO_ANUNCIO_ID)
    REFERENCES SQLSQUAD.BI_Estado_anuncio(BI_ESTADO_ANUNCIO_ID)
GO

ALTER TABLE SQLSQUAD.BI_Anuncio ADD CONSTRAINT RefBI_Tiempo1 
    FOREIGN KEY (BI_ANUNCIO_TIEMPO_ID)
    REFERENCES SQLSQUAD.BI_Tiempo(BI_TIEMPO_ID)
GO


/* 
 * TABLE: SQLSQUAD.BI_Pago_alquiler 
 */

ALTER TABLE SQLSQUAD.BI_Pago_alquiler ADD CONSTRAINT RefBI_Tiempo31 
    FOREIGN KEY (BI_PAGO_ALQUILER_TIEMPO_ID)
    REFERENCES SQLSQUAD.BI_Tiempo(BI_TIEMPO_ID)
GO

ALTER TABLE SQLSQUAD.BI_Pago_alquiler ADD CONSTRAINT RefBI_Estado_alquiler32 
    FOREIGN KEY (BI_PAGO_ALQUILER_ESTADO_ALQUILER_ID)
    REFERENCES SQLSQUAD.BI_Estado_alquiler(BI_ESTADO_ALQUILER_ID)
GO

ALTER TABLE SQLSQUAD.BI_Pago_alquiler ADD CONSTRAINT RefBI_Fecha_Pago34 
    FOREIGN KEY (BI_PAGO_ALQUILER_FECHA_PAGO_ID)
    REFERENCES SQLSQUAD.BI_Fecha_Pago(BI_FECHA_PAGO_ID)
GO

ALTER TABLE SQLSQUAD.BI_Pago_alquiler ADD CONSTRAINT RefBI_Tipo_moneda35 
    FOREIGN KEY (BI_PAGO_ALQUILER_TIPO_MONEDA_ID)
    REFERENCES SQLSQUAD.BI_Tipo_moneda(BI_TIPO_MONEDA_ID)
GO

ALTER TABLE SQLSQUAD.BI_Pago_alquiler ADD CONSTRAINT RefBI_Sucursal36 
    FOREIGN KEY (BI_PAGO_ALQUILER_SUCURSAL_CODIGO)
    REFERENCES SQLSQUAD.BI_Sucursal(BI_SUCURSAL_CODIGO)
GO

ALTER TABLE SQLSQUAD.BI_Pago_alquiler ADD CONSTRAINT RefBI_Tipo_operacion37 
    FOREIGN KEY (BI_PAGO_ALQUILER_TIPO_OPERACION_ID)
    REFERENCES SQLSQUAD.BI_Tipo_operacion(BI_TIPO_OPERACION_ID)
GO


/* 
 * TABLE: SQLSQUAD.BI_Venta_inmueble 
 */

ALTER TABLE SQLSQUAD.BI_Venta_inmueble ADD CONSTRAINT RefBI_Tiempo19 
    FOREIGN KEY (BI_VENTA_TIEMPO_ID)
    REFERENCES SQLSQUAD.BI_Tiempo(BI_TIEMPO_ID)
GO

ALTER TABLE SQLSQUAD.BI_Venta_inmueble ADD CONSTRAINT RefBI_Rango_m220 
    FOREIGN KEY (BI_VENTA_RANGO_M2_ID)
    REFERENCES SQLSQUAD.BI_Rango_m2(RANGO_M2_ID)
GO

ALTER TABLE SQLSQUAD.BI_Venta_inmueble ADD CONSTRAINT RefBI_Tipo_operacion22 
    FOREIGN KEY (BI_VENTA_TIPO_OPERACION_ID)
    REFERENCES SQLSQUAD.BI_Tipo_operacion(BI_TIPO_OPERACION_ID)
GO

ALTER TABLE SQLSQUAD.BI_Venta_inmueble ADD CONSTRAINT RefBI_Tipo_moneda23 
    FOREIGN KEY (BI_VENTA_TIPO_MONEDA_ID)
    REFERENCES SQLSQUAD.BI_Tipo_moneda(BI_TIPO_MONEDA_ID)
GO

ALTER TABLE SQLSQUAD.BI_Venta_inmueble ADD CONSTRAINT RefBI_Tipo_inmueble25 
    FOREIGN KEY (BI_VENTA_TIPO_INMUEBLE_ID)
    REFERENCES SQLSQUAD.BI_Tipo_inmueble(BI_TIPO_INMUEBLE_ID)
GO

ALTER TABLE SQLSQUAD.BI_Venta_inmueble ADD CONSTRAINT RefBI_Ubicacion26 
    FOREIGN KEY (BI_VENTA_UBICACION_ID)
    REFERENCES SQLSQUAD.BI_Ubicacion(BI_UBICACION_ID)
GO

ALTER TABLE SQLSQUAD.BI_Venta_inmueble ADD CONSTRAINT RefBI_Sucursal27 
    FOREIGN KEY (BI_VENTA_SUCURSAL_CODIGO)
    REFERENCES SQLSQUAD.BI_Sucursal(BI_SUCURSAL_CODIGO)
GO
-------------------------- FUNCIONES ----------------------------

CREATE FUNCTION SQLSQUAD.SignoMoneda(@moneda nvarchar(100))
RETURNS char(4)
AS
BEGIN
	 RETURN (SELECT CASE WHEN @moneda = 'Moneda Pesos' THEN '$'
						 WHEN @moneda = 'Moneda Dolares' THEN 'USD'
						 END)
END

GO
CREATE FUNCTION SQLSQUAD.cumplioPago(@fecha_pago datetime, @fecha_vencimiento datetime)
RETURNS int
BEGIN
	 RETURN (SELECT CASE WHEN @fecha_vencimiento > @fecha_pago THEN 1
						 ELSE 0
						 END)
END

GO
CREATE FUNCTION SQLSQUAD.mayorA100(@superficie numeric(18,2))
RETURNS int
BEGIN
     IF @superficie >= 100
		RETURN 1
	  
	 RETURN 0
END

GO
CREATE FUNCTION SQLSQUAD.entre75Y100(@superficie numeric(18,2))
RETURNS int
BEGIN
     IF @superficie >= 75 AND @superficie < 100
		RETURN 1
	  
	 RETURN 0
END

GO
CREATE FUNCTION SQLSQUAD.entre55Y75(@superficie numeric(18,2))
RETURNS int
BEGIN
     IF @superficie >= 55 AND @superficie < 75
		RETURN 1
	  
	 RETURN 0
END

GO
CREATE FUNCTION SQLSQUAD.entre35Y55(@superficie numeric(18,2))
RETURNS int
BEGIN
     IF @superficie >= 35 AND @superficie < 55
		RETURN 1
	  
	 RETURN 0
END
GO
CREATE FUNCTION SQLSQUAD.menorA35(@superficie numeric(18,2))
RETURNS int
BEGIN
     IF @superficie < 35
		RETURN 1
	  
	 RETURN 0
END
GO

CREATE FUNCTION SQLSQUAD.calcularEdad(@fechaNacimiento DATE)
RETURNS INT
AS
BEGIN
    DECLARE @edad INT;

    SELECT @edad = DATEDIFF(YEAR, @fechaNacimiento, GETDATE()) - 
                  CASE 
                     WHEN GETDATE() < DATEADD(YEAR, DATEDIFF(YEAR, @fechaNacimiento, GETDATE()), @fechaNacimiento) 
                     THEN 1 
                     ELSE 0 
                  END;

    RETURN @edad;
END

GO
CREATE FUNCTION SQLSQUAD.edadMenorA25(@edad int)
RETURNS int
BEGIN
	  IF @edad < 25
		RETURN 1
	  RETURN 0
END
GO
CREATE FUNCTION SQLSQUAD.edadEntre25Y35(@edad int)
RETURNS int
BEGIN
     IF @edad >= 25 AND @edad < 35
		RETURN 1
	 RETURN 0
END
GO
CREATE FUNCTION SQLSQUAD.edadEntre35Y50(@edad int)
RETURNS int
BEGIN
     IF @edad >= 35 AND @edad < 50
		RETURN 1
	  
	 RETURN 0
END
GO
CREATE FUNCTION SQLSQUAD.edadMayorA50(@edad int)
RETURNS int
BEGIN
     IF @edad >= 50
		RETURN 1
	  
	 RETURN 0
END
GO

CREATE FUNCTION SQLSQUAD.calcular_Rango_m2(@superficie numeric(18,2))
RETURNS int
BEGIN
	 RETURN (SELECT CASE WHEN SQLSQUAD.mayorA100(@superficie)   = 1  THEN 2
						 WHEN SQLSQUAD.entre75Y100(@superficie) = 1  THEN 5
						 WHEN SQLSQUAD.entre55Y75(@superficie)  = 1  THEN 4
						 WHEN SQLSQUAD.entre35Y55(@superficie)  = 1  THEN 3
						 WHEN SQLSQUAD.menorA35(@superficie)    = 1  THEN 1
						 END) 
END
GO
CREATE FUNCTION SQLSQUAD.calcular_Rango_etario(@edad int)
RETURNS int
BEGIN 
	 RETURN (SELECT CASE WHEN SQLSQUAD.edadMayorA50(@edad)    = 1  THEN 1
						 WHEN SQLSQUAD.edadEntre35Y50(@edad)  = 1  THEN 2
						 WHEN SQLSQUAD.edadEntre25Y35(@edad)  = 1  THEN 3
						 WHEN SQLSQUAD.edadMenorA25(@edad)    = 1  THEN 4
						 END) 
END
GO

-------------------------- PROCEDIMIENTOS ----------------------------

CREATE PROCEDURE MigrarDatosBI_Estado_Anuncio
AS 
BEGIN
	 INSERT INTO SQLSQUAD.BI_Estado_Anuncio(BI_ESTADO_ANUNCIO_ID, BI_ESTADO_ANUNCIO_NOMBRE)
	 SELECT E.ESTADO_ANUNCIO_ID, ESTADO_ANUNCIO_NOMBRE FROM SQLSQUAD.estado_anuncio E
END

GO
CREATE PROCEDURE MigrarDatosBI_Estado_Alquiler
AS 
BEGIN
	 INSERT INTO SQLSQUAD.BI_Estado_Alquiler(BI_ESTADO_ALQUILER_ID,BI_ESTADO_ALQUILER_NOMBRE)
	 SELECT E.ESTADO_ALQUILER_ID, E.ESTADO_ALQUILER_NOMBRE FROM SQLSQUAD.estado_alquiler E
END

GO
CREATE PROCEDURE MigrarDatosBI_Rango_Etario
AS
BEGIN
	 INSERT INTO SQLSQUAD.BI_Rango_Etario(MENOR_A_25, ENTRE_25_Y_35, ENTRE_35_Y_50, MAYOR_A_50)
	 SELECT SQLSQUAD.edadMenorA25(SQLSQUAD.calcularEdad(INQUILINO_FECHA_NAC)), SQLSQUAD.edadEntre25Y35(SQLSQUAD.calcularEdad(INQUILINO_FECHA_NAC)), SQLSQUAD.edadEntre35Y50(SQLSQUAD.calcularEdad(INQUILINO_FECHA_NAC)), SQLSQUAD.edadMayorA50(SQLSQUAD.calcularEdad(INQUILINO_FECHA_NAC))
	 FROM SQLSQUAD.inquilino
	 UNION
	 SELECT SQLSQUAD.edadMenorA25(SQLSQUAD.calcularEdad(AGENTE_FECHA_NAC)), SQLSQUAD.edadEntre25Y35(SQLSQUAD.calcularEdad(AGENTE_FECHA_NAC)), SQLSQUAD.edadEntre35Y50(SQLSQUAD.calcularEdad(AGENTE_FECHA_NAC)), SQLSQUAD.edadMayorA50(SQLSQUAD.calcularEdad(AGENTE_FECHA_NAC))
	 FROM SQLSQUAD.agente
END

GO
CREATE PROCEDURE MigrarDatosBI_Sucursal
AS
BEGIN
	 INSERT INTO SQLSQUAD.BI_Sucursal(BI_SUCURSAL_CODIGO,BI_SUCURSAL_DIRECCION, BI_SUCURSAL_NOMBRE, BI_SUCURSAL_TELEFONO)
	 SELECT SUCURSAL_CODIGO,concat(concat(d.DIRECCION_CALLE, ' '),d.DIRECCION_NUMERO_CALLE), SUCURSAL_NOMBRE, SUCURSAL_TELEFONO
	 FROM SQLSQUAD.sucursal 
	 INNER JOIN SQLSQUAD.direccion d on d.DIRECCION_ID = sucursal.SUCURSAL_DIRECCION_ID 
END
GO
CREATE PROCEDURE MigrarDatosBI_Ubicacion
AS
BEGIN
	 INSERT INTO SQLSQUAD.BI_Ubicacion(BI_UBICACION_BARRIO, BI_UBICACION_LOCALIDAD, BI_UBICACION_PROVINCIA)
	 SELECT b.BARRIO_NOMBRE, l.LOCALIDAD_NOMBRE, p.PROVINCIA_NOMBRE
	 FROM SQLSQUAD.barrio b
	 INNER JOIN SQLSQUAD.localidad l on l.LOCALIDAD_ID = b.BARRIO_LOCALIDAD_ID
	 INNER JOIN SQLSQUAD.provincia p on p.PROVINCIA_ID = l.LOCALIDAD_PROVINCIA_ID
END

GO
CREATE PROCEDURE MigrarDatosBI_Tiempo
AS
BEGIN
    INSERT INTO SQLSQUAD.BI_Tiempo (BI_TIEMPO_MES, BI_TIEMPO_CUATRIMESTRE, BI_TIEMPO_AÑO)
    SELECT
        MONTH(ANUNCIO_FECHA_PUBLICACION) AS TIEMPO_MES,
        DATEPART(QUARTER, ANUNCIO_FECHA_PUBLICACION) AS TIEMPO_CUATRIMESTRE,
        YEAR(ANUNCIO_FECHA_PUBLICACION) AS TIEMPO_AÑO
    FROM SQLSQUAD.anuncio
	UNION
	SELECT
        MONTH(VENTA_FECHA) AS TIEMPO_MES,
        DATEPART(QUARTER, VENTA_FECHA) AS TIEMPO_CUATRIMESTRE,
        YEAR(VENTA_FECHA) AS TIEMPO_AÑO
    FROM SQLSQUAD.venta
	UNION 
	SELECT 
		MONTH(PAGO_ALQUILER_FECHA) AS TIEMPO_MES,
        DATEPART(QUARTER, PAGO_ALQUILER_FECHA) AS TIEMPO_CUATRIMESTRE,
        YEAR(PAGO_ALQUILER_FECHA) AS TIEMPO_AÑO
	FROM SQLSQUAD.pago_alquiler
	UNION 
	SELECT 
		MONTH(PAGO_ALQUILER_FECHA_VENCIMIENTO) AS TIEMPO_MES,
        DATEPART(QUARTER, PAGO_ALQUILER_FECHA_VENCIMIENTO) AS TIEMPO_CUATRIMESTRE,
        YEAR(PAGO_ALQUILER_FECHA_VENCIMIENTO) AS TIEMPO_AÑO
	FROM SQLSQUAD.pago_alquiler
END

GO
CREATE PROCEDURE MigrarDatosBI_Tipo_Operacion
AS
BEGIN
	INSERT INTO SQLSQUAD.BI_Tipo_Operacion(BI_TIPO_OPERACION_ID, BI_TIPO_OPERACION_NOMBRE)
    SELECT TIP_OP.TIPO_OPERACION_ID, TIP_OP.TIPO_OPERACION_NOMBRE
    FROM SQLSQUAD.tipo_operacion TIP_OP
END

GO
CREATE PROCEDURE MigrarDatosBI_Rango_m2
AS
BEGIN
	 INSERT INTO SQLSQUAD.BI_Rango_m2(MAYOR_A_100, ENTRE_75_Y_100, ENTRE_55_75, ENTRE_35_Y_55, MENOR_A_35)
	 SELECT DISTINCT SQLSQUAD.mayorA100(INMUEBLE_SUPERFICIETOTAL), SQLSQUAD.entre75Y100(INMUEBLE_SUPERFICIETOTAL), SQLSQUAD.entre55Y75(INMUEBLE_SUPERFICIETOTAL), SQLSQUAD.entre35Y55(INMUEBLE_SUPERFICIETOTAL), SQLSQUAD.menorA35(INMUEBLE_SUPERFICIETOTAL) FROM SQLSQUAD.inmueble
END

GO
CREATE PROCEDURE MigrarDatosBI_Tipo_Moneda
AS
BEGIN
	INSERT INTO SQLSQUAD.BI_Tipo_Moneda(BI_TIPO_MONEDA_ID, BI_TIPO_MONEDA_NOMBRE)
    SELECT  TIP_MON.MONEDA_ID, TIP_MON.MONEDA_NOMBRE
    FROM SQLSQUAD.moneda TIP_MON
END
GO
CREATE PROCEDURE MigrarDatosBI_Tipo_Inmueble
AS
BEGIN
	INSERT INTO SQLSQUAD.BI_Tipo_Inmueble(BI_TIPO_INMUEBLE_ID, BI_TIPO_INMUEBLE_NOMBRE)
    SELECT TIP_INM.TIPO_INMUEBLE_ID, TIP_INM.TIPO_INMUEBLE_NOMBRE
    FROM SQLSQUAD.tipo_inmueble TIP_INM
END
GO

CREATE PROCEDURE MigrarDatosBI_Ambientes
AS
BEGIN
	INSERT INTO SQLSQUAD.BI_Ambientes(BI_AMBIENTES_ID, BI_AMBIENTES_NOMBRE)
    SELECT C.CANT_AMBIENTES_ID, C.CANT_AMBIENTES_NOMBRE
    FROM SQLSQUAD.cant_ambientes C
END
GO

CREATE PROCEDURE MigrarDatosBI_Fecha_Pago
AS
BEGIN
	 INSERT INTO SQLSQUAD.BI_Fecha_Pago(BI_FECHA_PAGO_FECHA_VENCIMIENTO, BI_FECHA_PAGO_FECHA)
	 SELECT DISTINCT PAGO_ALQUILER_FECHA_VENCIMIENTO, PAGO_ALQUILER_FECHA FROM SQLSQUAD.pago_alquiler
END

GO
CREATE PROCEDURE MigrarDatosBI_Pago_Alquiler
AS 
BEGIN
	 INSERT INTO SQLSQUAD.BI_Pago_alquiler(BI_PAGO_ALQUILER_TIEMPO_ID, BI_PAGO_ALQUILER_ESTADO_ALQUILER_ID, BI_PAGO_ALQUILER_FECHA_PAGO_ID,BI_PAGO_ALQUILER_TIPO_OPERACION_ID, BI_PAGO_ALQUILER_TIPO_MONEDA_ID, BI_PAGO_ALQUILER_SUCURSAL_CODIGO, BI_PAGO_ALQUILER_IMPORTE)
	 SELECT BI_TIEMPO_ID, ALQUILER_ESTADO_ALQUILER, BI_FECHA_PAGO_ID,ANUNCIO_TIPO_OPERACION_ID, ANUNCIO_MONEDA_ID, SUCURSAL_CODIGO, SUM(PAGO_ALQUILER_IMPORTE) AS [Importe]
	 FROM SQLSQUAD.pago_alquiler
	 JOIN SQLSQUAD.alquiler ON PAGO_ALQUILER_ALQUILER_CODIGO = ALQUILER_CODIGO
	 JOIN SQLSQUAD.anuncio ON ANUNCIO_CODIGO = ALQUILER_ANUNCIO_CODIGO
	 JOIN SQLSQUAD.agente ON ANUNCIO_AGENTE_CODIGO = AGENTE_CODIGO
	 JOIN SQLSQUAD.sucursal ON AGENTE_SUCURSAL_CODIGO = SUCURSAL_CODIGO
	 JOIN SQLSQUAD.BI_Tiempo ON (SELECT BI_TIEMPO_ID 
								 FROM SQLSQUAD.BI_Tiempo
								 WHERE BI_TIEMPO_AÑO              = YEAR(ALQUILER_FECHA_INICIO) 
									   AND BI_TIEMPO_CUATRIMESTRE = DATEPART(QUARTER, ALQUILER_FECHA_INICIO)
									   AND BI_TIEMPO_MES          = MONTH(ALQUILER_FECHA_INICIO))              = BI_TIEMPO_ID
	 JOIN SQLSQUAD.BI_Fecha_Pago ON (SELECT BI_FECHA_PAGO_ID FROM SQLSQUAD.BI_Fecha_Pago
										WHERE BI_FECHA_PAGO_FECHA = PAGO_ALQUILER_FECHA 
										AND BI_FECHA_PAGO_FECHA_VENCIMIENTO = PAGO_ALQUILER_FECHA_VENCIMIENTO) = BI_FECHA_PAGO_ID
	 GROUP BY BI_TIEMPO_ID, ALQUILER_ESTADO_ALQUILER, BI_FECHA_PAGO_ID,ANUNCIO_TIPO_OPERACION_ID, ANUNCIO_MONEDA_ID, SUCURSAL_CODIGO
END
GO

CREATE PROCEDURE MigrarDatosBI_Anuncio
AS
BEGIN
	INSERT INTO SQLSQUAD.BI_Anuncio(BI_ANUNCIO_TIEMPO_ID, BI_ANUNCIO_AMBIENTES_ID, BI_ANUNCIO_UBICACION_ID, BI_ANUNCIO_TIPO_OPERACION_ID, BI_ANUNCIO_SUCURSAL_CODIGO, BI_ANUNCIO_TIPO_MONEDA_ID, BI_ANUNCIO_RANGO_M2_ID, BI_ANUNCIO_TIPO_INMUEBLE_ID, BI_ANUNCIO_RANGO_ETARIO_ID, BI_ANUNCIO_ESTADO_ANUNCIO_ID, BI_ANUNCIO_DURACION_PROMEDIO, BI_ANUNCIO_PRECIO_PROMEDIO)
	SELECT BI_TIEMPO_ID, INMUEBLE_CANT_AMBIENTES_ID, BI_UBICACION_ID, ANUNCIO_TIPO_OPERACION_ID, AGENTE_SUCURSAL_CODIGO, ANUNCIO_MONEDA_ID, SQLSQUAD.calcular_Rango_m2(INMUEBLE_SUPERFICIETOTAL) AS [Rango m2], INMUEBLE_TIPO_INMUEBLE_ID, SQLSQUAD.calcular_Rango_etario(SQLSQUAD.calcularEdad(AGENTE_FECHA_NAC)) AS [Rango Etario], ANUNCIO_ESTADO_ANUNCIO_ID, AVG(DATEDIFF(DAY, ANUNCIO_FECHA_PUBLICACION, ANUNCIO_FECHA_FINALIZACION)) AS [DURACION], AVG(ANUNCIO_COSTO_ANUNCIO) AS [Costo anuncio]
	FROM SQLSQUAD.anuncio A1
	JOIN SQLSQUAD.inmueble I1			ON ANUNCIO_INMUEBLE_CODIGO    = INMUEBLE_CODIGO
	JOIN SQLSQUAD.agente AG1        ON ANUNCIO_AGENTE_CODIGO      = AGENTE_CODIGO
	JOIN SQLSQUAD.direccion	DI1		ON INMUEBLE_DIRECCION_ID      = DIRECCION_ID
	JOIN SQLSQUAD.barrio BA1			ON DIRECCION_BARRIO_ID        = BARRIO_ID
	JOIN SQLSQUAD.localidad	LO1		ON BARRIO_LOCALIDAD_ID        = LOCALIDAD_ID
	JOIN SQLSQUAD.provincia	PR1		ON LOCALIDAD_PROVINCIA_ID     = PROVINCIA_ID
	JOIN SQLSQUAD.BI_Tiempo T1        ON (SELECT BI_TIEMPO_ID 
											 FROM SQLSQUAD.BI_Tiempo
											 WHERE BI_TIEMPO_AÑO        = YEAR(ANUNCIO_FECHA_PUBLICACION) 
											 AND BI_TIEMPO_CUATRIMESTRE = DATEPART(QUARTER, ANUNCIO_FECHA_PUBLICACION)
											 AND BI_TIEMPO_MES          = MONTH(ANUNCIO_FECHA_PUBLICACION)) = BI_TIEMPO_ID
	JOIN SQLSQUAD.BI_Ubicacion UB1     ON (SELECT BI_UBICACION_ID 
											FROM SQLSQUAD.BI_Ubicacion
											WHERE BARRIO_NOMBRE	 = BI_UBICACION_BARRIO
											AND LOCALIDAD_NOMBRE = BI_UBICACION_LOCALIDAD
											AND PROVINCIA_NOMBRE = BI_UBICACION_PROVINCIA) = BI_UBICACION_ID
	GROUP BY  BI_TIEMPO_ID, INMUEBLE_CANT_AMBIENTES_ID, BI_UBICACION_ID, ANUNCIO_TIPO_OPERACION_ID, AGENTE_SUCURSAL_CODIGO, ANUNCIO_MONEDA_ID, SQLSQUAD.calcular_Rango_m2(INMUEBLE_SUPERFICIETOTAL), INMUEBLE_TIPO_INMUEBLE_ID, SQLSQUAD.calcular_Rango_etario(SQLSQUAD.calcularEdad(AGENTE_FECHA_NAC)), ANUNCIO_ESTADO_ANUNCIO_ID				
END
GO

CREATE PROCEDURE MigrarDatosBI_Alquiler
AS
BEGIN
	INSERT INTO SQLSQUAD.BI_Alquiler(BI_ALQUILER_TIEMPO_ID, BI_ALQUILER_UBICACION_ID, BI_ALQUILER_TIPO_OPERACION_ID, BI_ALQUILER_SUCURSAL_CODIGO, BI_ALQUILER_TIPO_INMUEBLE_ID, BI_ALQUILER_RANGO_ETARIO_ID, BI_ALQUILER_ESTADO_ALQUILER_ID, BI_ALQUILER_COMISION_PROMEDIO, BI_ALQUILER_CANTIDAD_ALQUILERES)
	SELECT BI_TIEMPO_ID, BI_UBICACION_ID, ANUNCIO_TIPO_OPERACION_ID, AGENTE_SUCURSAL_CODIGO, INMUEBLE_TIPO_INMUEBLE_ID, SQLSQUAD.calcular_Rango_etario(SQLSQUAD.calcularEdad(INQUILINO_FECHA_NAC)) AS [Rango Etario], ALQUILER_ESTADO_ALQUILER, AVG(ALQUILER_COMISION) AS [Comision], COUNT(ALQUILER_CODIGO) AS [Cantidad de alquileres]
	FROM SQLSQUAD.alquiler
	JOIN SQLSQUAD.anuncio		ON ALQUILER_ANUNCIO_CODIGO    = ANUNCIO_CODIGO
	JOIN SQLSQUAD.inmueble		ON ANUNCIO_INMUEBLE_CODIGO    = INMUEBLE_CODIGO
	JOIN SQLSQUAD.agente        ON ANUNCIO_AGENTE_CODIGO      = AGENTE_CODIGO
	JOIN SQLSQUAD.direccion		ON INMUEBLE_DIRECCION_ID      = DIRECCION_ID
	JOIN SQLSQUAD.barrio		ON DIRECCION_BARRIO_ID        = BARRIO_ID
	JOIN SQLSQUAD.localidad		ON BARRIO_LOCALIDAD_ID        = LOCALIDAD_ID
	JOIN SQLSQUAD.provincia		ON LOCALIDAD_PROVINCIA_ID     = PROVINCIA_ID
	JOIN SQLSQUAD.BI_Tiempo		ON (SELECT BI_TIEMPO_ID 
										FROM SQLSQUAD.BI_Tiempo
										WHERE BI_TIEMPO_AÑO            = YEAR(ALQUILER_FECHA_INICIO) 
											AND BI_TIEMPO_CUATRIMESTRE = DATEPART(QUARTER, ALQUILER_FECHA_INICIO)
											AND BI_TIEMPO_MES          = MONTH(ALQUILER_FECHA_INICIO))           = BI_TIEMPO_ID
	JOIN SQLSQUAD.BI_Ubicacion  ON (SELECT BI_UBICACION_ID 
										FROM SQLSQUAD.BI_Ubicacion
										WHERE BARRIO_NOMBRE	= BI_UBICACION_BARRIO
											AND LOCALIDAD_NOMBRE	  = BI_UBICACION_LOCALIDAD
											AND PROVINCIA_NOMBRE	  = BI_UBICACION_PROVINCIA)					 = BI_UBICACION_ID
	JOIN SQLSQUAD.inquilino_alquiler ON INQUILINO_ALQUILER_ALQUILER_CODIGO = ALQUILER_CODIGO
	JOIN SQLSQUAD.inquilino			 ON INQUILINO_CODIGO = INQUILINO_ALQUILER_INQUILINO_CODIGO
	GROUP BY BI_TIEMPO_ID, BI_UBICACION_ID, ANUNCIO_TIPO_OPERACION_ID, AGENTE_SUCURSAL_CODIGO, INMUEBLE_TIPO_INMUEBLE_ID, SQLSQUAD.calcular_Rango_etario(SQLSQUAD.calcularEdad(INQUILINO_FECHA_NAC)), ALQUILER_ESTADO_ALQUILER
END
GO

CREATE PROCEDURE MigrarDatosBI_Venta
AS
BEGIN
	INSERT INTO SQLSQUAD.BI_Venta_inmueble(BI_VENTA_TIEMPO_ID, BI_VENTA_UBICACION_ID, BI_VENTA_TIPO_OPERACION_ID, BI_VENTA_SUCURSAL_CODIGO, BI_VENTA_TIPO_MONEDA_ID, BI_VENTA_RANGO_M2_ID, BI_VENTA_TIPO_INMUEBLE_ID,BI_VENTA_PRECIO, BI_VENTA_COMISION_PROMEDIO, BI_VENTA_PRECIO_PROMEDIO_POR_M2)
	SELECT BI_TIEMPO_ID, BI_UBICACION_ID, ANUNCIO_TIPO_OPERACION_ID, AGENTE_SUCURSAL_CODIGO, VENTA_MONEDA_ID, SQLSQUAD.calcular_Rango_m2(INMUEBLE_SUPERFICIETOTAL) AS [Rango m2], INMUEBLE_TIPO_INMUEBLE_ID, SUM(VENTA_PRECIO_VENTA) AS [Precio venta], AVG(VENTA_COMISION) AS [Comision], CAST(AVG(VENTA_PRECIO_VENTA / INMUEBLE_SUPERFICIETOTAL) AS DECIMAL(10,2)) AS [Precio promedio por m2]
	FROM SQLSQUAD.venta
	JOIN SQLSQUAD.anuncio		ON VENTA_ANUNCIO_CODIGO       = ANUNCIO_CODIGO
	JOIN SQLSQUAD.inmueble		ON ANUNCIO_INMUEBLE_CODIGO    = INMUEBLE_CODIGO
	JOIN SQLSQUAD.agente        ON ANUNCIO_AGENTE_CODIGO      = AGENTE_CODIGO
	JOIN SQLSQUAD.direccion		ON INMUEBLE_DIRECCION_ID      = DIRECCION_ID
	JOIN SQLSQUAD.barrio		ON DIRECCION_BARRIO_ID        = BARRIO_ID
	JOIN SQLSQUAD.localidad		ON BARRIO_LOCALIDAD_ID        = LOCALIDAD_ID
	JOIN SQLSQUAD.provincia		ON LOCALIDAD_PROVINCIA_ID     = PROVINCIA_ID
	JOIN SQLSQUAD.BI_Tiempo		ON (SELECT BI_TIEMPO_ID 
									FROM SQLSQUAD.BI_Tiempo

									WHERE BI_TIEMPO_AÑO            = YEAR(VENTA_FECHA) 
										AND BI_TIEMPO_CUATRIMESTRE = DATEPART(QUARTER, VENTA_FECHA)
										AND BI_TIEMPO_MES          = MONTH(VENTA_FECHA))           = BI_TIEMPO_ID
	JOIN SQLSQUAD.BI_Ubicacion  ON (SELECT BI_UBICACION_ID 
									FROM SQLSQUAD.BI_Ubicacion
									WHERE BARRIO_NOMBRE	= BI_UBICACION_BARRIO
										AND LOCALIDAD_NOMBRE	  = BI_UBICACION_LOCALIDAD
										AND PROVINCIA_NOMBRE	  = BI_UBICACION_PROVINCIA)		   = BI_UBICACION_ID
	GROUP BY BI_TIEMPO_ID, BI_UBICACION_ID, ANUNCIO_TIPO_OPERACION_ID, AGENTE_SUCURSAL_CODIGO, VENTA_MONEDA_ID, SQLSQUAD.calcular_Rango_m2(INMUEBLE_SUPERFICIETOTAL), INMUEBLE_TIPO_INMUEBLE_ID
END
GO

------------------ TRANSACCION ---------------------------
GO
BEGIN TRANSACTION
				   EXEC MigrarDatosBI_Rango_Etario
				   EXEC MigrarDatosBI_Ambientes
				   EXEC MigrarDatosBI_Rango_m2
				   EXEC MigrarDatosBI_Sucursal
				   EXEC MigrarDatosBI_Tiempo
				   EXEC MigrarDatosBI_Tipo_Inmueble
				   EXEC MigrarDatosBI_Tipo_Moneda
				   EXEC MigrarDatosBI_Tipo_Operacion
				   EXEC MigrarDatosBI_Ubicacion
				   EXEC MigrarDatosBI_Estado_Alquiler
				   EXEC MigrarDatosBI_Estado_Anuncio
				   EXEC MigrarDatosBI_Fecha_Pago
				   EXEC MigrarDatosBI_Anuncio
				   EXEC MigrarDatosBI_Venta
				   EXEC MigrarDatosBI_Alquiler   
				   EXEC MigrarDatosBI_Pago_Alquiler
COMMIT TRANSACTION
GO

--1. Duración promedio (en días) que se encuentran publicados los anuncios
--según el tipo de operación (alquiler, venta, etc), barrio y ambientes para cada
--cuatrimestre de cada año. Se consideran todos los anuncios que se dieron de alta
--en ese cuatrimestre. La duración se calcula teniendo en cuenta la fecha de alta y
--la fecha de finalización.


CREATE VIEW SQLSQUAD.BI_duracion_promedio
AS
SELECT BI_TIEMPO_AÑO, BI_TIEMPO_CUATRIMESTRE, BI_TIPO_OPERACION_NOMBRE, BI_UBICACION_BARRIO, BI_AMBIENTES_NOMBRE, AVG(BI_ANUNCIO_DURACION_PROMEDIO) AS [Duracion promedio en días publicados] FROM SQLSQUAD.BI_Anuncio
JOIN SQLSQUAD.BI_Tiempo			ON BI_TIEMPO_ID			= BI_ANUNCIO_TIEMPO_ID
JOIN SQLSQUAD.BI_Tipo_Operacion ON BI_TIPO_OPERACION_ID	= BI_ANUNCIO_TIPO_OPERACION_ID
JOIN SQLSQUAD.BI_Ubicacion		ON BI_UBICACION_ID		= BI_ANUNCIO_UBICACION_ID
JOIN SQLSQUAD.BI_Ambientes		ON BI_AMBIENTES_ID		= BI_ANUNCIO_AMBIENTES_ID
GROUP BY BI_TIEMPO_AÑO, BI_TIEMPO_CUATRIMESTRE, BI_TIPO_OPERACION_NOMBRE, BI_UBICACION_BARRIO, BI_AMBIENTES_NOMBRE

--2. Precio promedio de los anuncios de inmuebles según el tipo de operación
--(alquiler, venta, etc), tipo de inmueble y rango m2 para cada cuatrimestre/año.
--Se consideran todos los anuncios que se dieron de alta en ese cuatrimestre. El
--precio se debe expresar en el tipo de moneda que corresponda, identificando de
--cuál se trata.

CREATE VIEW SQLSQUAD.BI_precio_promedio
AS
SELECT BI_TIEMPO_AÑO, BI_TIEMPO_CUATRIMESTRE, BI_TIPO_OPERACION_NOMBRE, BI_TIPO_INMUEBLE_NOMBRE, (SELECT CASE WHEN MAYOR_A_100 = 1 THEN 'MAYOR A 100'
																									 WHEN ENTRE_75_Y_100 = 1 THEN 'ENTRE 75 Y 100'
																									 WHEN ENTRE_55_75 = 1 THEN 'ENTRE 55 Y 75'
																									 WHEN ENTRE_35_Y_55 = 1 THEN 'ENTRE 35 Y 55'
																									 WHEN MENOR_A_35 = 1 THEN 'MENOR A 35'
																									 END) AS [Rango m2], SQLSQUAD.SignoMoneda(BI_TIPO_MONEDA_NOMBRE) + ' '+ CAST(AVG(BI_ANUNCIO_COSTO) AS NVARCHAR(100)) AS [Precio promedio], BI_TIPO_MONEDA_NOMBRE FROM SQLSQUAD.BI_Anuncio
JOIN SQLSQUAD.BI_Tipo_Operacion ON BI_TIPO_OPERACION_ID = BI_ANUNCIO_TIPO_OPERACION_ID
JOIN SQLSQUAD.BI_Tipo_Inmueble  ON BI_TIPO_INMUEBLE_ID = BI_ANUNCIO_TIPO_INMUEBLE_ID
JOIN SQLSQUAD.BI_Rango_m2		ON RANGO_M2_ID = BI_ANUNCIO_RANGO_M2_ID
JOIN SQLSQUAD.BI_Tiempo			ON BI_TIEMPO_ID = BI_ANUNCIO_TIEMPO_ID
JOIN SQLSQUAD.BI_Tipo_moneda	ON BI_TIPO_MONEDA_ID = BI_ANUNCIO_TIPO_MONEDA_ID
GROUP BY BI_TIEMPO_AÑO, BI_TIEMPO_CUATRIMESTRE, BI_TIPO_OPERACION_NOMBRE, BI_TIPO_INMUEBLE_NOMBRE, MAYOR_A_100, ENTRE_75_Y_100, ENTRE_55_75, ENTRE_35_Y_55, MENOR_A_35, BI_TIPO_MONEDA_NOMBRE


--3. Los 5 barrios más elegidos para alquilar en función del rango etario de los
--inquilinos para cada cuatrimestre/año. Se calcula en función de los alquileres
--dados de alta en dicho periodo.

CREATE VIEW SQLSQUAD.BI_barrios_mas_elegidos
AS
SELECT BI_TIEMPO_AÑO, BI_TIEMPO_CUATRIMESTRE, [Rango Etario], BI_UBICACION_ID, BI_UBICACION_BARRIO AS 'Barrio mas elegido', [Cantidad de Alquileres]
FROM (
    SELECT BI_TIEMPO_AÑO, BI_TIEMPO_CUATRIMESTRE, CASE	WHEN MENOR_A_25 = 1 THEN 'MENOR A 25' 
														WHEN MAYOR_A_50    = 1 THEN 'MAYOR A 50'
														WHEN ENTRE_25_Y_35 = 1 THEN 'ENTRE 25 Y 35'
														WHEN ENTRE_35_Y_50 = 1 THEN 'ENTRE 35 Y 50'
														END AS [Rango Etario],
													BI_UBICACION_ID,
													BI_UBICACION_BARRIO,
													COUNT(*) AS [Cantidad de Alquileres],
													ROW_NUMBER() OVER (PARTITION BY BI_TIEMPO_AÑO, BI_TIEMPO_CUATRIMESTRE, MENOR_A_25, MAYOR_A_50, ENTRE_25_Y_35, ENTRE_35_Y_50
																		ORDER BY COUNT(*) DESC) AS NumeroFila
    FROM SQLSQUAD.BI_Alquiler
    JOIN SQLSQUAD.BI_Ubicacion	  ON BI_UBICACION_ID            = BI_ALQUILER_UBICACION_ID
    JOIN SQLSQUAD.BI_Tiempo		  ON BI_TIEMPO_ID               = BI_ALQUILER_TIEMPO_ID
    JOIN SQLSQUAD.BI_Rango_Etario ON BI_ALQUILER_RANGO_ETARIO_ID = RANGO_ETARIO_ID
    GROUP BY BI_TIEMPO_AÑO, BI_TIEMPO_CUATRIMESTRE, BI_UBICACION_ID, BI_UBICACION_BARRIO, MENOR_A_25, MAYOR_A_50, ENTRE_25_Y_35, ENTRE_35_Y_50
) AS S
WHERE NumeroFila <= 5

--4. Porcentaje de incumplimiento de pagos de alquileres en término por cada
--mes/año. Se calcula en función de las fechas de pago y fecha de vencimiento del
--mismo. El porcentaje es en función del total de pagos en dicho periodo.

CREATE VIEW SQLSQUAD.BI_incumplimiento_pagos
AS
SELECT T1.BI_TIEMPO_AÑO, T1.BI_TIEMPO_MES, 100-((SELECT COUNT(*) FROM SQLSQUAD.BI_Pago_alquiler PA2
												JOIN SQLSQUAD.BI_Fecha_Pago FP2   ON FP2.BI_FECHA_PAGO_ID = PA2.BI_PAGO_ALQUILER_FECHA_PAGO_ID
												JOIN SQLSQUAD.BI_Tiempo T2        ON T2.BI_TIEMPO_ID     = PA2.BI_PAGO_ALQUILER_TIEMPO_ID
												WHERE SQLSQUAD.cumplioPago(BI_FECHA_PAGO_FECHA, BI_FECHA_PAGO_FECHA_VENCIMIENTO) = 1 
												AND T1.BI_TIEMPO_AÑO = T2.BI_TIEMPO_AÑO AND T1.BI_TIEMPO_MES = T2.BI_TIEMPO_MES)* 100 / (COUNT(*))) AS [Porcentaje de incumplimiento]
FROM SQLSQUAD.BI_Pago_alquiler PA1
JOIN SQLSQUAD.BI_Tiempo T1        ON T1.BI_TIEMPO_ID     = PA1.BI_PAGO_ALQUILER_TIEMPO_ID
GROUP BY BI_TIEMPO_AÑO, BI_TIEMPO_MES

--5. Porcentaje promedio de incremento del valor de los alquileres para los
--contratos en curso por mes/año. Se calcula tomando en cuenta el último pago
--con respecto al del mes en curso, únicamente de aquellos alquileres que hayan
--tenido aumento y están activos.

CREATE VIEW SQLSQUAD.BI_incremento
AS
SELECT T1.BI_TIEMPO_AÑO, T1.BI_TIEMPO_MES, (SELECT SUM(BI_PAGO_ALQUILER_IMPORTE) AS [Importe] FROM SQLSQUAD.BI_Pago_alquiler
											 JOIN SQLSQUAD.BI_Tiempo	T2		     ON BI_TIEMPO_ID = BI_PAGO_ALQUILER_TIEMPO_ID
											 JOIN SQLSQUAD.BI_Estado_Alquiler EA2 ON BI_ESTADO_ALQUILER_ID = BI_PAGO_ALQUILER_ESTADO_ALQUILER_ID
											 WHERE EA2.BI_ESTADO_ALQUILER_NOMBRE = EA1.BI_ESTADO_ALQUILER_NOMBRE AND T2.BI_TIEMPO_AÑO = T1.BI_TIEMPO_AÑO AND T2.BI_TIEMPO_MES = T1.BI_TIEMPO_MES + 1
											 GROUP BY T2.BI_TIEMPO_AÑO, T2.BI_TIEMPO_MES) * 100 / (SUM(PA1.BI_PAGO_ALQUILER_IMPORTE)) AS [Porcentaje promedio de incremento de valor]															
FROM SQLSQUAD.BI_Pago_alquiler PA1
JOIN SQLSQUAD.BI_Tiempo T1			 ON BI_TIEMPO_ID = BI_PAGO_ALQUILER_TIEMPO_ID
JOIN SQLSQUAD.BI_Estado_Alquiler EA1 ON BI_ESTADO_ALQUILER_ID = BI_PAGO_ALQUILER_ESTADO_ALQUILER_ID
WHERE BI_PAGO_ALQUILER_IMPORTE < (SELECT SUM(BI_PAGO_ALQUILER_IMPORTE) AS [Importe] FROM SQLSQUAD.BI_Pago_alquiler
									JOIN SQLSQUAD.BI_Tiempo	T2		     ON BI_TIEMPO_ID = BI_PAGO_ALQUILER_TIEMPO_ID
									JOIN SQLSQUAD.BI_Estado_Alquiler EA2 ON BI_ESTADO_ALQUILER_ID = BI_PAGO_ALQUILER_ESTADO_ALQUILER_ID
									WHERE EA2.BI_ESTADO_ALQUILER_NOMBRE = EA1.BI_ESTADO_ALQUILER_NOMBRE AND T2.BI_TIEMPO_AÑO = T1.BI_TIEMPO_AÑO AND T2.BI_TIEMPO_MES = T1.BI_TIEMPO_MES
									GROUP BY T2.BI_TIEMPO_AÑO, T2.BI_TIEMPO_MES, EA2.BI_ESTADO_ALQUILER_NOMBRE)
	  AND BI_ESTADO_ALQUILER_NOMBRE = 'Activo'
GROUP BY T1.BI_TIEMPO_AÑO, T1.BI_TIEMPO_MES, BI_ESTADO_ALQUILER_NOMBRE

-----

SELECT BI_TIEMPO_AÑO, BI_TIEMPO_MES, BI_ESTADO_ALQUILER_NOMBRE, SUM(BI_PAGO_ALQUILER_IMPORTE) AS [Importe] FROM SQLSQUAD.BI_Pago_alquiler
JOIN SQLSQUAD.BI_Tiempo	T2		     ON BI_TIEMPO_ID = BI_PAGO_ALQUILER_TIEMPO_ID
JOIN SQLSQUAD.BI_Estado_Alquiler EA2 ON BI_ESTADO_ALQUILER_ID = BI_PAGO_ALQUILER_ESTADO_ALQUILER_ID
WHERE EA2.BI_ESTADO_ALQUILER_NOMBRE = 'Activo'
GROUP BY BI_TIEMPO_AÑO, BI_TIEMPO_MES, BI_ESTADO_ALQUILER_NOMBRE
ORDER BY 1,2

--6. Precio promedio de m2 de la venta de inmuebles según el tipo de inmueble y
--la localidad para cada cuatrimestre/año. Se calcula en función de las ventas
--concretadas.

CREATE VIEW SQLSQUAD.BI_precio_prom_m2
AS
SELECT BI_TIEMPO_AÑO, BI_TIEMPO_CUATRIMESTRE, BI_TIPO_INMUEBLE_NOMBRE, BI_UBICACION_LOCALIDAD, BI_VENTA_PRECIO_PROMEDIO_POR_M2 AS [Precio promedio de m2]
FROM SQLSQUAD.BI_Venta_inmueble
JOIN SQLSQUAD.BI_Tipo_inmueble ON BI_TIPO_INMUEBLE_ID = BI_VENTA_TIPO_INMUEBLE_ID
JOIN SQLSQUAD.BI_Ubicacion	   ON BI_UBICACION_ID     = BI_VENTA_UBICACION_ID 
JOIN SQLSQUAD.BI_Tiempo        ON BI_TIEMPO_ID        = BI_VENTA_TIEMPO_ID
GROUP BY BI_TIEMPO_AÑO, BI_TIEMPO_CUATRIMESTRE, BI_TIPO_INMUEBLE_NOMBRE, BI_UBICACION_LOCALIDAD, BI_VENTA_PRECIO_PROMEDIO_POR_M2
GO

--7. Valor promedio de la comisión según el tipo de operación (alquiler, venta, etc)
--y sucursal para cada cuatrimestre/año. Se calcula en función de los alquileres y
--ventas concretadas dentro del periodo.
CREATE VIEW SQLSQUAD.BI_valor_prom_comision
AS
SELECT BI_TIEMPO_AÑO, BI_TIEMPO_CUATRIMESTRE, BI_TIPO_OPERACION_NOMBRE, BI_SUCURSAL_CODIGO, CAST(AVG(BI_VENTA_COMISION)  AS DECIMAL(10,2))AS [Promedio de comisión]
FROM SQLSQUAD.BI_Venta_inmueble
JOIN SQLSQUAD.BI_Sucursal		ON BI_SUCURSAL_CODIGO		  = BI_VENTA_SUCURSAL_CODIGO
JOIN SQLSQUAD.BI_Tiempo			ON BI_TIEMPO_ID				  = BI_VENTA_TIEMPO_ID
JOIN SQLSQUAD.BI_Tipo_operacion ON BI_VENTA_TIPO_OPERACION_ID = BI_TIPO_OPERACION_ID
GROUP BY BI_TIEMPO_AÑO, BI_TIEMPO_CUATRIMESTRE, BI_TIPO_OPERACION_NOMBRE, BI_SUCURSAL_CODIGO
UNION
SELECT BI_TIEMPO_AÑO, BI_TIEMPO_CUATRIMESTRE, BI_TIPO_OPERACION_NOMBRE, BI_SUCURSAL_CODIGO, CAST(AVG(BI_ALQUILER_COMISION) AS DECIMAL(10,2)) AS [Promedio de comisión]
FROM SQLSQUAD.BI_Alquiler
JOIN SQLSQUAD.BI_Sucursal		ON BI_SUCURSAL_CODIGO		  = BI_ALQUILER_SUCURSAL_CODIGO
JOIN SQLSQUAD.BI_Tiempo			ON BI_TIEMPO_ID				  = BI_ALQUILER_TIEMPO_ID
JOIN SQLSQUAD.BI_Tipo_operacion ON BI_ALQUILER_TIPO_OPERACION_ID = BI_TIPO_OPERACION_ID
GROUP BY BI_TIEMPO_AÑO, BI_TIEMPO_CUATRIMESTRE, BI_TIPO_OPERACION_NOMBRE, BI_SUCURSAL_CODIGO
GO

--8. Porcentaje de operaciones concretadas (tanto de alquileres como ventas) por
--cada sucursal, según el rango etario de los empleados por año en función de la
--cantidad de anuncios publicados en ese mismo año.
CREATE VIEW SQLSQUAD.BI_valor_porcentaje_operaciones_concretadas
AS
SELECT T1.BI_TIEMPO_AÑO, BI_SUCURSAL_CODIGO, (SELECT CASE  WHEN RANGO_ETARIO_ID = 1 THEN 'MAYOR A 50'
														   WHEN RANGO_ETARIO_ID = 2 THEN 'ENTRE 35 Y 50'
														   WHEN RANGO_ETARIO_ID = 3 THEN 'ENTRE 25 Y 35'
														   WHEN RANGO_ETARIO_ID = 4 THEN 'MENOR A 25'
														   END) AS [Rango Etario]
										   , (SELECT COUNT(*)
												FROM SQLSQUAD.BI_Anuncio A2
												JOIN SQLSQUAD.BI_Sucursal	  ON BI_SUCURSAL_CODIGO = A2.BI_ANUNCIO_SUCURSAL_CODIGO
												JOIN SQLSQUAD.BI_Tiempo	 T2	  ON BI_TIEMPO_ID       = A2.BI_ANUNCIO_TIEMPO_ID
												JOIN SQLSQUAD.BI_Rango_Etario ON RANGO_ETARIO_ID    = A2.BI_ANUNCIO_RANGO_ETARIO_ID
												WHERE (BI_ANUNCIO_ESTADO_ANUNCIO_ID = 1 OR BI_ANUNCIO_ESTADO_ANUNCIO_ID = 3)
												AND A2.BI_ANUNCIO_SUCURSAL_CODIGO = BI_SUCURSAL_CODIGO AND T2.BI_TIEMPO_AÑO = T1.BI_TIEMPO_AÑO AND A2.BI_ANUNCIO_RANGO_ETARIO_ID = R1.RANGO_ETARIO_ID
												)*100 / COUNT(*) AS [Porcentaje de operaciones concretadas]
FROM SQLSQUAD.BI_Anuncio A1
JOIN SQLSQUAD.BI_Sucursal	  ON BI_SUCURSAL_CODIGO = A1.BI_ANUNCIO_SUCURSAL_CODIGO
JOIN SQLSQUAD.BI_Tiempo	T1	  ON BI_TIEMPO_ID       = A1.BI_ANUNCIO_TIEMPO_ID
JOIN SQLSQUAD.BI_Rango_Etario R1 ON RANGO_ETARIO_ID    = A1.BI_ANUNCIO_RANGO_ETARIO_ID
GROUP BY BI_TIEMPO_AÑO, BI_SUCURSAL_CODIGO, RANGO_ETARIO_ID

--9. Monto total de cierre de contratos por tipo de operación (tanto de alquileres
--como ventas) por cada cuatrimestre y sucursal, diferenciando el tipo de moneda

CREATE VIEW SQLSQUAD.BI_monto_total_cierre_contratos
AS
SELECT BI_TIEMPO_AÑO, BI_TIEMPO_CUATRIMESTRE, BI_TIPO_OPERACION_NOMBRE, BI_SUCURSAL_CODIGO,BI_TIPO_MONEDA_NOMBRE, ROUND(SUM(BI_VENTA_PRECIO),2) AS [Precio]
FROM SQLSQUAD.BI_Venta_inmueble
JOIN SQLSQUAD.BI_Sucursal		ON BI_SUCURSAL_CODIGO		  = BI_VENTA_SUCURSAL_CODIGO
JOIN SQLSQUAD.BI_Tiempo 		ON BI_TIEMPO_ID				  = BI_VENTA_TIEMPO_ID
JOIN SQLSQUAD.BI_Tipo_operacion ON BI_VENTA_TIPO_OPERACION_ID = BI_TIPO_OPERACION_ID
JOIN SQLSQUAD.BI_Tipo_moneda    ON BI_TIPO_MONEDA_ID          = BI_VENTA_TIPO_MONEDA_ID
GROUP BY BI_TIEMPO_AÑO, BI_TIEMPO_CUATRIMESTRE, BI_TIPO_OPERACION_NOMBRE, BI_SUCURSAL_CODIGO, BI_TIPO_MONEDA_NOMBRE
UNION
SELECT BI_TIEMPO_AÑO, BI_TIEMPO_CUATRIMESTRE, BI_TIPO_OPERACION_NOMBRE, BI_SUCURSAL_CODIGO,BI_TIPO_MONEDA_NOMBRE, ROUND(SUM(BI_PAGO_ALQUILER_IMPORTE),2) AS [Precio]
FROM SQLSQUAD.BI_Pago_alquiler
JOIN SQLSQUAD.BI_Sucursal		ON BI_SUCURSAL_CODIGO				  = BI_PAGO_ALQUILER_SUCURSAL_CODIGO
JOIN SQLSQUAD.BI_Tiempo			ON BI_TIEMPO_ID						  = BI_PAGO_ALQUILER_TIEMPO_ID
JOIN SQLSQUAD.BI_Tipo_operacion ON BI_PAGO_ALQUILER_TIPO_OPERACION_ID = BI_TIPO_OPERACION_ID
JOIN SQLSQUAD.BI_Tipo_moneda    ON BI_TIPO_MONEDA_ID				  = BI_PAGO_ALQUILER_TIPO_MONEDA_ID
GROUP BY BI_TIEMPO_AÑO, BI_TIEMPO_CUATRIMESTRE, BI_TIPO_OPERACION_NOMBRE, BI_SUCURSAL_CODIGO, BI_TIPO_MONEDA_NOMBRE







SELECT * FROM SQLSQUAD.alquiler
JOIN SQLSQUAD.
